import atpy
import numpy
import matplotlib.pyplot as plt
import coords

from stat_fun3 import *

where = numpy.where
sect = numpy.intersect1d

def get_list (data_table, stat_table, slices) :
    ''' Finds constant H-band sources and returns a list of source IDs. 

    It slices the field into (slices**2) regions and picks the most constant
    source from each of them.

    This procedure is agnostic to position units.
    '''

    ramin = data_table.RA.min()
    ramax = data_table.RA.max()
    demin = data_table.DEC.min()
    demax = data_table.DEC.max()

    raside = (ramax - ramin) / slices
    deside = (demax - demin) / slices

    raspace = linspace(ramin,ramax,slices)
    despace = linspace(demin,demax,slices)

    sidlist = []

    ws1 = where(stat_table.n_detect > 100)[0]
    ws2 = where(stat_table.n_detect < 125)[0]
    
    ws = sect(ws1,ws2)

    good_sources = stat_table.SOURCEID[ws]

    for left in raspace:
        for bottom in despace:
            w1 = where(data_table.RA > left)[0]
            w2 = where(data_table.RA < left+raside)[0]
            w3 = where(data_table.DEC > bottom)[0]
            w4 = where(data_table.DEC < bottom+deside)[0]
            
            w = sect(sect(w1,w2),sect(w3,w4))

            right_place = stat_table.SOURCEID[w]

            # The sids of all the good stars in this neck of the woods
            doubly_good_sources = sect(good_sources,right_place)

            wdg = where(stat_table.SOURCEID == doubly_good_sources) 

            local_constant = stat_table.j_rms[wdg].min()
            sidlist.append(local_constant)

    return sidlist
